specVersion: 1.0.0
description: Beefy Finance Automated Liquidity Manager Subgraph
repository: https://github.com/beefyfinance/cowcentrated-subgraph
schema:
  file: ./schema.graphql
indexerHints:
  prune: auto # we have our own snapshotting mechanism
dataSources:
  - kind: ethereum/contract
    name: ClmManagerFactory
    network: {{network}}
    source:
      address: "{{clmManagerFactoryAddress}}"
      abi: ClmManagerFactory
      startBlock: {{clmManagerFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/manager-factory.ts
      entities: &clmEntities
        - ClmHarvestEvent
        - CLM
        - ClmPosition
        - ClmPositionInteraction
        - ClmSnapshot
        - ClmManager
        - ClmManagerCollectionEvent
        - ClmRewardPool
        - ClmStrategy
        - ClockTick
        - Investor
        - Protocol
        - Token
        - Transaction
      abis: &abis
        - name: ClmManagerFactory
          file: ./abis/beefy/clm/ClmManagerFactory.json
        - name: ClmManager
          file: ./abis/beefy/clm/ClmManager.json
        - name: ClmStrategyFactory
          file: ./abis/beefy/clm/ClmStrategyFactory.json
        - name: ClmStrategy
          file: ./abis/beefy/clm/ClmStrategy.json
        - name: RewardPoolFactory
          file: ./abis/beefy/clm/RewardPoolFactory.json
        - name: RewardPool
          file: ./abis/beefy/clm/RewardPool.json

        - name: ClassicVaultFactory
          file: ./abis/beefy/classic/ClassicVaultFactory.json
        - name: ClassicVault
          file: ./abis/beefy/classic/ClassicVault.json
        - name: ClassicStrategy
          file: ./abis/beefy/classic/ClassicStrategy.json
        - name: ClassicBoostFactory
          file: ./abis/beefy/classic/ClassicBoostFactory.json
        - name: ClassicBoost
          file: ./abis/beefy/classic/ClassicBoost.json

        - name: IERC20
          file: ./abis/IERC20/IERC20.json
        - name: Multicall3
          file: ./abis/multicall/Multicall3.json
      eventHandlers:
        - event: ProxyCreated(address)
          handler: handleClmManagerCreated
          
  - kind: ethereum/contract
    name: ClmStrategyFactory
    network: {{network}}
    source:
      address: "{{clmStrategyFactoryAddress}}"
      abi: ClmStrategyFactory
      startBlock: {{clmStrategyFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/strategy-factory.ts
      entities: *clmEntities
      abis: *abis
      eventHandlers:
        - event: GlobalPause(bool)
          handler: handleClmStrategyGlobalPause
          
  - kind: ethereum/contract
    name: RewardPoolFactory
    network: {{network}}
    source:
      address: "{{rewardPoolFactoryAddress}}"
      abi: RewardPoolFactory
      startBlock: {{rewardPoolFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/reward-pool-factory.ts
      entities: *clmEntities
      abis: *abis
      eventHandlers:
        - event: ProxyCreated(string,address)
          handler: handleRewardPoolCreated

  - kind: ethereum/contract
    name: Clock
    network: {{network}}
    source:
      address: "{{clmManagerFactoryAddress}}"
      abi: ClmManagerFactory
      startBlock: {{clmManagerFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/common/mapping/clock.ts
      entities: *clmEntities
      abis: *abis
      blockHandlers:
        - handler: handleClockTick
          filter:
            kind: polling
            every: {{clockTickBlocks}}
  

  - kind: ethereum/contract
    name: ClassicVaultFactory
    network: {{network}}
    source:
      address: "{{beefyClassicVaultFactoryAddress}}"
      abi: ClassicVaultFactory
      startBlock: {{beefyClassicVaultFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/classic/mapping/vault-and-strategy-factory.ts
      entities: &classicEntities
        - Classic
        - ClassicBoost
        - ClassicHarvestEvent
        - ClassicPosition
        - ClassicPositionInteraction
        - ClassicSnapshot
        - ClassicStrategy
        - ClassicVault
        - ClockTick
        - Investor
        - Protocol
        - Token
        - Transaction
      abis: *abis
      eventHandlers:
        - event: ProxyCreated(address)
          handler: handleClassicVaultOrStrategyCreated
          
  - kind: ethereum/contract
    name: ClassicBoostFactory
    network: {{network}}
    source:
      address: "{{beefyClassicBoostFactoryAddress}}"
      abi: ClassicBoostFactory
      startBlock: {{beefyClassicBoostFactoryStartBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/classic/mapping/boost-factory.ts
      entities: *classicEntities
      abis: *abis
      eventHandlers:
        - event: BoostDeployed(indexed address)
          handler: handleClassicBoostCreated
    
templates:
  - name: ClmManager
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ClmManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/manager.ts
      entities: *clmEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleClmManagerInitialized
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleClmManagerTransfer

  - name: ClmStrategy
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ClmStrategy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/strategy.ts
      entities: *clmEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleClmStrategyInitialized
        - event: Paused(address)
          handler: handleClmStrategyPaused
        - event: Unpaused(address)
          handler: handleClmStrategyUnpaused
        - event: Harvest(uint256,uint256)
          handler: handleClmStrategyHarvestAmounts
        - event: HarvestRewards(uint256)
          handler: handleClmStrategyHarvestRewards
        - event: ClaimedFees(uint256,uint256,uint256,uint256)
          handler: handleClmStrategyClaimedFees
        - event: ClaimedRewards(uint256)
          handler: handleClmStrategyClaimedRewards

  
  - name: ClmRewardPool
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: RewardPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/clm/mapping/reward-pool.ts
      entities: *clmEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleRewardPoolInitialized
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleRewardPoolTransfer
        - event: RewardPaid(indexed address,indexed address,uint256)
          handler: handleRewardPoolRewardPaid
        - event: AddReward(address)
          handler: handleRewardPoolAddReward
        - event: RemoveReward(address,address)
          handler: handleRewardPoolRemoveReward



  - name: ClassicVault
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ClassicVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/classic/mapping/vault.ts
      entities: *classicEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleClassicVaultInitialized
        - event: UpgradeStrat(address)
          handler: handleClassicVaultUpgradeStrategy
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleClassicVaultTransfer

  - name: ClassicStrategy
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ClassicStrategy
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/classic/mapping/strategy.ts
      entities: *classicEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleClassicStrategyInitialized
        - event: Paused(address)
          handler: handleClassicStrategyPaused
        - event: Unpaused(address)
          handler: handleClassicStrategyUnpaused
        - event: StratHarvest(indexed address,uint256,uint256)
          handler: handleClassicStrategyHarvest

  - name: ClassicBoost
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: ClassicBoost
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7 # 0xgraph's version
      language: wasm/assemblyscript
      file: ./src/classic/mapping/boost.ts
      entities: *classicEntities
      abis: *abis
      eventHandlers:
        - event: Initialized(uint8)
          handler: handleClassicBoostInitialized
        - event: Staked(indexed address,uint256)
          handler: handleClassicBoostStaked
        - event: Withdrawn(indexed address,uint256)
          handler: handleClassicBoostWithdrawn
        - event: RewardPaid(indexed address,uint256)
          handler: handleClassicBoostRewardPaid